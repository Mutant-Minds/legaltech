services:
  pgdb:
    image: postgres:latest
    container_name: pgdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - legaltech

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    depends_on:
      - pgdb
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - legaltech

  globdoc:
    build:
      context: ./backend
      dockerfile: ./../docker/globdoc.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    container_name: globdoc-service
    depends_on:
      - pgdb
    env_file:
      - ./backend/services/globdoc/.env
    ports:
      - '8000:8080'
    expose:
      - '8080'
    volumes:
      - ./backend/services/globdoc/app:/app/app
      - ./backend/libs/specter:/app/libs/specter
    networks:
      - legaltech

  identity:
    build:
      context: ./backend
      dockerfile: ./../docker/identity.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    container_name: identity-service
    depends_on:
      - pgdb
    env_file:
      - ./backend/services/identity/.env
    ports:
      - '8001:8080'
    expose:
      - '8080'
    volumes:
      - ./backend/services/identity/app:/app/app
      - ./backend/libs/specter:/app/libs/specter
    networks:
      - legaltech

  test:
    build:
      context: .
      dockerfile: docker/test.dockerfile
    container_name: testing-and-linting
    volumes:
      - .:/app
      - ./docker/entrypoints:/entrypoints
    entrypoint: [ "/bin/bash", "/entrypoints/run_test.sh" ]
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=test
    networks:
      - legaltech
    profiles:
      - tools

  liquibase:
    image: liquibase/liquibase:latest
    container_name: liquibase-runner
    depends_on:
      - pgdb
    environment:
      - LIQUIBASE_COMMAND_URL=jdbc:postgresql://pgdb:5432/${LIQUIBASE_DB_NAME}
      - LIQUIBASE_COMMAND_CHANGELOG_FILE=db-changelog.xml
      - LIQUIBASE_COMMAND_USERNAME=${LIQUIBASE_DB_USER}
      - LIQUIBASE_COMMAND_PASSWORD=${LIQUIBASE_DB_PASSWORD}
      - WAIT_FOR_IT_SECONDS=60
    working_dir: /migrations
    command: update
    volumes:
      - ./liquibase:/migrations
    networks:
      - legaltech
    profiles:
      - tools

volumes:
  pg-data:
  pgadmin-data:

networks:
  legaltech:
    driver: bridge